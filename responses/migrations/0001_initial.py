# Generated by Django 2.2.4 on 2019-08-15 18:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NewsOrgType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ToolTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=500)),
                ('job_duties', models.TextField()),
                ('news_org_name', models.CharField(blank=True, max_length=500, null=True)),
                ('news_org_age', models.CharField(choices=[('a', '0-9 years'), ('b', '10-19 years'), ('c', '20-29 years'), ('d', '30-39 years'), ('e', '40+ years')], max_length=1)),
                ('tool_satisfaction', models.CharField(choices=[('a', 'Very satisfied'), ('b', 'Somewhat satisfied'), ('c', 'Neither satisfied nor dissatisfied'), ('d', 'Somewhat dissatisfied'), ('e', 'Very dissatisfied')], max_length=1)),
                ('tool_recommendation', models.CharField(choices=[('a', 'Very enthusiastically'), ('b', 'Somewhat enthusiastically'), ('c', 'Neither enthusiastically nor unhappy'), ('d', 'I would not recommend this software'), ('e', "I don't know")], max_length=1)),
                ('tool_recommendation_why_not', models.TextField(blank=True, null=True)),
                ('stopped_using', models.BooleanField(default=False)),
                ('why_stopped_using', models.TextField(blank=True, null=True)),
                ('org_struggle', models.CharField(choices=[('a', 'Content management systems (CMS)'), ('b', 'Customer relationship management (CRM)'), ('c', 'Data visualization'), ('d', 'Analytics or metrics'), ('e', 'Product'), ('f', 'Multimedia production or editing'), ('g', 'Other')], max_length=1)),
                ('org_struggle_other', models.TextField(blank=True, null=True)),
                ('org_comparision', models.CharField(choices=[('a', 'Very favorably'), ('b', 'Somewhat favorably'), ('c', 'Neither favorably nor unfavorably'), ('d', 'Somewhat unfavorably'), ('e', 'Very unfavorably')], max_length=1)),
                ('org_communication', models.CharField(choices=[('a', 'Very clearly'), ('b', 'Somewhat clearly'), ('c', 'Not very clearly'), ('d', 'Not at all clearly'), ('e', "I don't know")], max_length=1)),
                ('org_sustainability', models.CharField(choices=[('a', 'Very confident'), ('b', 'Somewhat confident'), ('c', 'Not very confident'), ('d', 'Not at all confident'), ('e', "I don't know")], max_length=1)),
                ('talk_more', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('most_important_tool', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='most_important_tool', to='responses.Tool')),
                ('news_org_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='responses.NewsOrgType')),
                ('tasks_used', models.ManyToManyField(to='responses.ToolTask')),
                ('tools_used', models.ManyToManyField(to='responses.Tool')),
            ],
        ),
    ]
